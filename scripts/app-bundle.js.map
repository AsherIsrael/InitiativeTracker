{"version":3,"sources":["app.js","entity.js","environment.js","main.js","resources/index.js"],"names":["App","entities","delayedEntities","entityName","entityRace","entityClass","entityInitiative","turnIndicator","addEntity","newEntity","length","push","i","initiative","splice","forceTurnEvaluation","removeEntity","entity","currentList","index","indexOf","removed","delayEntity","returnEntity","adjustTurn","direction","Entity","init","name","race","gameClass","delaying","class","display","delay","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Entity} from './entity';\n\nexport class App {\n    constructor() {\n        this.entities = [];\n        this.delayedEntities = [];\n        this.entityName = null;\n        this.entityRace = null;\n        this.entityClass = null;\n        this.entityInitiative = 0;\n        this.turnIndicator = 0;\n    }\n\n    // Add a new entity to the initiative list.\n    addEntity() {\n        let newEntity = new Entity(this.entityInitiative,this.entityName, this.entityRace, this.entityClass)\n        if ( this.entities.length == 0 ) {\n            this.entities.push(newEntity);\n        } else {\n            for(let i = 0; i < this.entities.length; i++) {\n                if( newEntity.initiative > this.entities[i].initiative) {\n                    this.entities.splice(i, 0, newEntity);\n                    i = this.entities.length;\n                } else if (i == this.entities.length-1) {\n                    this.entities.push(newEntity);\n                }\n            }\n        }\n        this.entityName = null;\n        this.entityRace = null;\n        this.entityClass = null;\n        this.entityInitiative = 0;\n        this.forceTurnEvaluation();\n    }\n\n    removeEntity(entity, currentList) {\n        let index = currentList.indexOf(entity);\n        let removed = currentList[index];\n        if ( index !== -1 ) {\n            currentList.splice(index, 1);\n        }\n        return removed;\n    }\n\n    delayEntity(entity) {\n        if(this.turnIndicator == this.entities.indexOf(entity)) {\n            this.forceTurnEvaluation();\n        }\n        this.delayedEntities.push(this.removeEntity(entity, this.entities));\n    }\n\n    returnEntity(entity) {\n        this.entities.splice(this.turnIndicator, 0, this.removeEntity(entity, this.delayedEntities));\n        this.forceTurnEvaluation();\n    }\n\n    // Aurelia doesn't re-evaluate the if.bind statement that checks where to display\n    // the turn indicator when the entity is removed.\n    // To force a re-render I have to manually change the turnIndicator value, then reset it.\n    // FLAGGED FOR OPTIMIZATION\n    forceTurnEvaluation() {\n        this.turnIndicator -= 1;\n        this.turnIndicator += 1;\n    }\n\n    adjustTurn(direction) {\n        this.turnIndicator += direction;\n        if(this.turnIndicator >= this.entities.length) {\n            this.turnIndicator = 0;\n        } else if (this.turnIndicator < 0) {\n            this.turnIndicator = this.entities.length - 1;\n        }\n    }\n\n    // moveEntity(entity) {\n    //     if  ( entities.includes(entity) ){\n    //         let moveMe = removeEntity(entity);\n    //         delayedEntities.push(moveMe);\n    //     }else{\n    //         let moveMe = delayedEntities.removeEntity(entity);\n    //         entities.push(moveMe);\n    //     }\n    // }\n}","export class Entity {\r\n    constructor(init, name = null, race = null, gameClass = null) {\r\n        this.name = name;\r\n        this.initiative = init;\r\n        this.delaying = false;\r\n        this.class = gameClass;\r\n        this.race = race ? race : \"?????\";\r\n    }\r\n\r\n    // setInitiative(init) {\r\n    //     this.initiative = init;\r\n    // }\r\n\r\n    display() {\r\n        if(this.name) {\r\n            if(this.class) {\r\n                return `${this.name}, the ${this.race} ${this.class}`;\r\n            }\r\n            return `${this.name}, the ${this.race}`;\r\n        } else if(this.class) {\r\n            return `${this.race} ${this.class}`;\r\n        }\r\n        return `${this.race}`;\r\n    }\r\n\r\n    delay() {\r\n        this.delaying = true;\r\n    }\r\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}